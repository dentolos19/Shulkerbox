@using Shulkerbox.Services
@using Shulkerbox.Models
<MudDialog>
    <DialogContent>
        <MudSelect T="AccountModel" Label="Account" @bind-Value="Account">
            @foreach (var account in UserAccounts)
            {
                <MudSelectItem Value="account" />
            }
        </MudSelect>
        <MudSelect T="VersionModel" Label="Version" @bind-Value="Version">
            @foreach (var version in GameVersions)
            {
                <MudSelectItem Value="version" />
            }
        </MudSelect>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Success" Variant="Variant.Filled" OnClick="Save">Save</MudButton>
    </DialogActions>
</MudDialog>

@code
{
    [Inject] private GameService GameService { get; set; }
    [Inject] private SettingsService SettingsService { get; set; }

    [CascadingParameter] private MudDialogInstance Instance { get; set; }

    private IList<AccountModel> UserAccounts { get; set; } = new List<AccountModel>();
    private IList<VersionModel> GameVersions { get; set; } = new List<VersionModel>();

    private AccountModel? Account { get; set; }
    private VersionModel? Version { get; set; }

    protected override async Task OnInitializedAsync()
    {
        UserAccounts = SettingsService.Accounts;
        GameVersions = (await GameService.Launcher.GetAllVersionsAsync())
            .Where(version => version.IsLocalVersion)
            .Select(version => new VersionModel(version)).ToList();
        if (!string.IsNullOrEmpty(SettingsService.LastAccountUsed))
            Account = UserAccounts.FirstOrDefault(account => account.Username == SettingsService.LastAccountUsed);
        if (!string.IsNullOrEmpty(SettingsService.LastVersionUsed))
            Version = GameVersions.FirstOrDefault(version => version.Name == SettingsService.LastVersionUsed);
    }

    private void Save()
    {
        Instance.Close(DialogResult.Ok((Username:Account, Version)));
    }

    private void Cancel()
    {
        Instance.Cancel();
    }
}